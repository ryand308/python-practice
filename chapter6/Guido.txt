使用類別與物件 V.S. 模組的時機

以下是決定何時該將程式放入類別或物件的準則:
。當你需要許多實例，且它們有類似的行為（方法），但內部的狀態不同（屬性）時，物件是最實用的選擇。

。類別可繼承，模組不行。

。如果某個東西你只需要一個，模組可能是最好的選擇。無論程式參考某個Python模組幾次，它都只會載入一個複本。（給Java 與 C++程式員：如果你對Erich Gamma寫的 Design Patterns: Elementof Reusable Object-Oriented Software 這本書很熟的話。可以將Python 模組當成一個單例(singletion))。

。如果你有許多變數，它們裡面有許多值，而且這些值可以當成引數傳給多個函式，將它們定義成類別可能比較好。例如，或許你會用一個字典，裡面有代表彩色圖像的size 與 color等鍵。你可以在程式中為每一個圖像建立不同的字典，並將它們當成引數傳給 scale() 或 transform() 等函式。當你加入鍵與函式時，可能會很亂。比與trans form () 方法。於是我們就可以將彩色圖像的資料與方法定義在同一個地方。

。使用最簡單的問題解決方法。字典、串列與tuple都比模組更簡單、更小，且更快，而模組常比類別簡單。

Guido 的建議：
	避免過度設計資料結構。Tuple比物件好（試試具名tuple）。簡單的欄位比getter/setter 函式好...內建的資料類型是你的好朋友。儘量使用數字，字串、tuple、串列、集合、字典。也試試使用集合、程式庫，特別是deque。
		Guido van Rossum (http://bit.ly/guido-vr)
